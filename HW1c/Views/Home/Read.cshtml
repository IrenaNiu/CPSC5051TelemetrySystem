
@model HW1c.Models.PhotoModel
@{
    ViewBag.Title = "Read";
}
<script>
    function magnify(imgID, zoom) {
        var img, glass, w, h, bw;
        img = document.getElementById(imgID);
        /*create magnifier glass:*/
        glass = document.createElement("DIV");
        glass.setAttribute("class", "img-magnifier-glass");
        /*insert magnifier glass:*/
        img.parentElement.insertBefore(glass, img);
        /*set background properties for the magnifier glass:*/
        glass.style.backgroundImage = "url('" + img.src + "')";
        glass.style.backgroundRepeat = "no-repeat";
        glass.style.backgroundSize = (img.width * zoom) + "px " + (img.height * zoom) + "px";
        bw = 3;
        w = glass.offsetWidth / 2;
        h = glass.offsetHeight / 2;
        /*execute a function when someone moves the magnifier glass over the image:*/
        glass.addEventListener("mousemove", moveMagnifier);
        img.addEventListener("mousemove", moveMagnifier);
        /*and also for touch screens:*/
        glass.addEventListener("touchmove", moveMagnifier);
        img.addEventListener("touchmove", moveMagnifier);
        function moveMagnifier(e) {
            var pos, x, y;
            /*prevent any other actions that may occur when moving over the image*/
            e.preventDefault();
            /*get the cursor's x and y positions:*/
            pos = getCursorPos(e);
            x = pos.x;
            y = pos.y;
            /*prevent the magnifier glass from being positioned outside the image:*/
            if (x > img.width - (w / zoom)) { x = img.width - (w / zoom); }
            if (x < w / zoom) { x = w / zoom; }
            if (y > img.height - (h / zoom)) { y = img.height - (h / zoom); }
            if (y < h / zoom) { y = h / zoom; }
            /*set the position of the magnifier glass:*/
            glass.style.left = (x - w) + "px";
            glass.style.top = (y - h) + "px";
            /*display what the magnifier glass "sees":*/
            glass.style.backgroundPosition = "-" + ((x * zoom) - w + bw) + "px -" + ((y * zoom) - h + bw) + "px";
        }
        function getCursorPos(e) {
            var a, x = 0, y = 0;
            e = e || window.event;
            /*get the x and y positions of the image:*/
            a = img.getBoundingClientRect();
            /*calculate the cursor's x and y coordinates, relative to the image:*/
            x = e.pageX - a.left;
            y = e.pageY - a.top;
            /*consider any page scrolling:*/
            x = x - window.pageXOffset;
            y = y - window.pageYOffset;
            return { x: x, y: y };
        }
    }
</script>

<style>
    /* Green Back button */
    .back {
        border: 2px solid black;
        background-color: white;
        color: black;
        padding: 6px 33px;
        font-size: 12px;
        cursor: pointer;
        border-color: darkseagreen;
        color: seagreen;
        border-radius: 5px;
    }

        .back:hover {
            background-color: seagreen;
            color: white;
        }

    /* Download button */
    .downloadPhoto {
        background-color: royalblue;
        border: none;
        color: white;
        padding: 8px 18px;
        cursor: pointer;
        font-size: 12px;
        border-radius: 5px;
    }
    /* The container <div> - needed to position the dropdown content */
    .dropdown2 {
        position: relative;
        display: inline-block;
    }

    /* Dropdown Content (Hidden by Default) */
    .dropdown-content2 {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        /* Links inside the dropdown */
        .dropdown-content2 a {
            color: black;
            padding: 8px 12px;
            text-decoration: none;
            cursor: pointer;
            display: block;
        }

            /* Change color of dropdown links on hover */
            .dropdown-content2 a:hover {
                background-color: #f1f1f1
            }

    /* Show the dropdown menu on hover */
    .dropdown2:hover .dropdown-content2 {
        display: block;
    }

    /* Change the background color of the dropdown button when the dropdown content is shown */
    .dropdown2:hover .downloadPhoto {
        background-color: royalblue;
    }
</style>
<br />
<br />
<br />
<br />
<div class="row text-center">
    <div class="col-4">
        <div class="img-magnifier-container">
            <img id="myimage" src="~/Content/Img/@Model.PhotoFile" width="350" height="400">
        </div>
        <p>Click the button to use the magnifying glass.</p>
        <button class="btn btn-floating btn-primary btn-lg" onclick='magnify("myimage", 3)'><i class="fa fa-search"></i></button>
    </div>
    <div class="col">
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <div class="row text-md-center">
            <div class="col-5 text-center">
                <p>Photo Detailed Info</p>
            </div>
        </div>
        <div class="row text-md-center">
            <div class="col-3 text-right">
                @Html.DisplayNameFor(m => m.TestValue)
            </div>
            <div class="col text-left">
                @Html.DisplayFor(m => m.TestValue)
            </div>
        </div>
        <div class="row text-md-center">
            <div class="col-3 text-right">
                @Html.DisplayNameFor(m => m.LabValue)
            </div>
            <div class="col text-left">
                @Html.DisplayFor(m => m.LabValue)
            </div>
        </div>
        <div class="row text-md-center">
            <div class="col-3 text-right">
                @Html.DisplayNameFor(m => m.Accuracy)
            </div>
            <div class="col text-left">
                @Html.DisplayFor(m => m.Accuracy)
            </div>
        </div>

        <div class="row text-md-center">
            <div class="col-3 text-right">
                @Html.DisplayNameFor(m => m.Location)
            </div>
            <div class="col text-left">
                @Html.DisplayFor(m => m.Location)
            </div>
        </div>

        <div class="row text-md-center">
            <div class="col-3 text-right">
                @Html.DisplayNameFor(m => m.RecordedDateTime)
            </div>
            <div class="col-6 text-left">
                @Html.DisplayFor(m => m.RecordedDateTime)
            </div>
        </div>

        <div class="row text-md-center">
            <div class="col-3 text-right">
                @Html.DisplayNameFor(m => m.UserID)
            </div>
            <div class="col text-left">
                @Html.DisplayFor(m => m.UserID)
            </div>
        </div>

        <div class="row text-md-center">
            <div class="col-3 text-right">
                @Html.DisplayNameFor(m => m.PhoneID)
            </div>
            <div class="col text-left">
                @Html.DisplayFor(m => m.PhoneID)
            </div>
        </div>

        <div class="row text-md-center">
            <div class="col-3 text-right">
                @Html.DisplayNameFor(m => m.AppVersion)
            </div>
            <div class="col text-left">
                @Html.DisplayFor(m => m.AppVersion)
            </div>
        </div>
        <br />
        <br />
        <script>
            function convertJPG(photoFile) {
                var convert = "/Content/Img/" + photoFile.substring(0, photoFile.length - 3) + "jpg";
                var link = document.createElement("a");
                link.download = photoFile.substring(0, photoFile.length - 3) + "jpg";
                link.href = convert;
                link.click();
            }
        </script>
        <div class="row text-md-center">
            <div class="col-3 text-right">
                <button type="button" class="back" onclick="location.href='@Url.Action("Library", "Home")'">Go back</button>
            </div>
            <div class="col-3 text-left">
                <!-- Add icon library -->
                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

                <!-- Auto width -->
                <div class="dropdown2">
                    <button class="downloadPhoto"><i class="fa fa-download"></i> Download</button>
                    <div class="dropdown-content2">
                        <a href="~/Content/Img/@Model.PhotoFile" download><img scr="/Content/Img/@Model.PhotoFile">As PNG</a>
                        <a onclick="convertJPG('@Model.PhotoFile')">As JPG</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


