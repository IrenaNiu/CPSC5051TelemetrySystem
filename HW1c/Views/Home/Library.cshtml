@using HW1c.Models;
@model LibViewModel

@{
    ViewBag.Title = "Library";
}


<br />
<br />
<h1>Photo library</h1>
<p> Table below lists photo info recorded by mobile app. Select a photo ID to view details. Select photo thumbnail to view photo. </p>
<p> (Click the button to use the magnifying glass when it shows up.) </p>

<script>
    function myFunction(photoFile) {
        document.getElementById("showPhoto").innerHTML = "<img id='myimage' src= " + photoFile + " width = 300 height = 350/>";
        $('#maglass').show();
    }

    function magnify(imgID, zoom) {
        var img, glass, w, h, bw;
        img = document.getElementById(imgID);
        /*create magnifier glass:*/
        glass = document.createElement("DIV");
        glass.setAttribute("class", "img-magnifier-glass");
        /*insert magnifier glass:*/
        img.parentElement.insertBefore(glass, img);
        /*set background properties for the magnifier glass:*/
        glass.style.backgroundImage = "url('" + img.src + "')";
        glass.style.backgroundRepeat = "no-repeat";
        glass.style.backgroundSize = (img.width * zoom) + "px " + (img.height * zoom) + "px";
        bw = 3;
        w = glass.offsetWidth / 2;
        h = glass.offsetHeight / 2;
        /*execute a function when someone moves the magnifier glass over the image:*/
        glass.addEventListener("mousemove", moveMagnifier);
        img.addEventListener("mousemove", moveMagnifier);
        /*and also for touch screens:*/
        glass.addEventListener("touchmove", moveMagnifier);
        img.addEventListener("touchmove", moveMagnifier);
        function moveMagnifier(e) {
            var pos, x, y;
            /*prevent any other actions that may occur when moving over the image*/
            e.preventDefault();
            /*get the cursor's x and y positions:*/
            pos = getCursorPos(e);
            x = pos.x;
            y = pos.y;
            /*prevent the magnifier glass from being positioned outside the image:*/
            if (x > img.width - (w / zoom)) { x = img.width - (w / zoom); }
            if (x < w / zoom) { x = w / zoom; }
            if (y > img.height - (h / zoom)) { y = img.height - (h / zoom); }
            if (y < h / zoom) { y = h / zoom; }
            /*set the position of the magnifier glass:*/
            glass.style.left = (x - w) + "px";
            glass.style.top = (y - h) + "px";
            /*display what the magnifier glass "sees":*/
            glass.style.backgroundPosition = "-" + ((x * zoom) - w + bw) + "px -" + ((y * zoom) - h + bw) + "px";
        }
        function getCursorPos(e) {
            var a, x = 0, y = 0;
            e = e || window.event;
            /*get the x and y positions of the image:*/
            a = img.getBoundingClientRect();
            /*calculate the cursor's x and y coordinates, relative to the image:*/
            x = e.pageX - a.left;
            y = e.pageY - a.top;
            /*consider any page scrolling:*/
            x = x - window.pageXOffset;
            y = y - window.pageYOffset;
            return { x: x, y: y };
        }
    }
</script>

<style type="text/css">
    .imgThumbnail {
        cursor: pointer;
    }

        .imgThumbnail:hover {
            -moz-box-shadow: 0 0 10px #ccc;
            -webkit-box-shadow: 0 0 10px #ccc;
            box-shadow: 0 0 10px #ccc;
        }
</style>

<div class="row text-center">
    <br />
    <div class="col-3">
        <div id="showPhoto" class="row text-center">
        </div>

        <button class="btn btn-primary btn-lg" id="maglass" style="display:none" onclick='magnify("myimage", 3)'><i class="fa fa-search"></i></button>

    </div>

    <div class="col">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">PhotoID</th>
                    <th scope="col">Photo Thumbnail</th>
                    <th scope="col">Value</th>
                    <th scope="col">Location</th>
                    <th scope="col">Date</th>

                </tr>
            </thead>
            <tbody>
                @{
                    foreach (var item in Model.PhotoViewModel.PhotoList)
                    {
                        <tr>
                            <td>@Html.ActionLink(item.PhotoID, "Read", new { id = item.PhotoID }, new { @class = "small" })</td>
                            <td onclick="myFunction('/Content/Img/' + '@item.PhotoFile')">
                                <img src="~/Content/Img/@item.PhotoFile" width="30" height="30" class="imgThumbnail">
                            </td>
                            <td>@item.Value</td>
                            <td>@item.Location</td>
                            <td>@item.RecordedDateTime.ToShortDateString()</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
