@using HW1c.Models;
@model ReportViewModel

@{
    ViewBag.Title = "Accuracy";
}
<br />
<br />
<br />
<br />
<h2>Test Accuracy Report</h2>
<br />
<!--Row 1-->
<div class="row">
    <div class="col-6 text-left">
        <input style="max-width: 400px; text-align: center; margin-left: 20px; margin-bottom: 40px;" type="text" class="daterange" id="DateRangeSelector"/>
        <div class="btn-group">
            <button type="button" class="btn btn-outline-default " style="padding:5px 24px;" id="Monthly">Monthly</button>
            <button type="button" class="btn btn-outline-default " style="padding:5px 24px;" id="Yearly">Yearly</button>
        </div>
    </div>
    <div class="col-2 text-right">
        <div class="dropdown3">
            <button class="downloadAccurary"><i class="fa fa-download"></i> Download</button>
            <div class="dropdown-content3">
                <a href="~/Content/report/accuracy.xlsx" download>As Excel</a>
                <a href="~/Content/report/accuracy.pdf" download>As PDF</a>
            </div>
        </div>
    </div>
</div>
<style>
    /* Download button */
    .downloadAccurary {
        background-color: royalblue;
        border: none;
        color: white;
        padding: 8px 18px;
        cursor: pointer;
        font-size: 14px;
        border-radius: 5px;
    }
    /* The container <div>
        - needed to position the dropdown content */
    .dropdown3 {
        position: relative;
        display: inline-block;
    }

    /* Dropdown Content (Hidden by Default) */
    .dropdown-content3 {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 100px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        /* Links inside the dropdown */
        .dropdown-content3 a {
            color: black;
            padding: 8px 12px;
            text-align:left;
            text-decoration: none;
            cursor: pointer;
            display: block;
        }

            /* Change color of dropdown links on hover */
            .dropdown-content3 a:hover {
                background-color: #f1f1f1
            }

    /* Show the dropdown menu on hover */
    .dropdown3:hover .dropdown-content3 {
        display: block;
    }

    /* Change the background color of the dropdown button when the dropdown content is shown */
    .dropdown3:hover .downloadAccurary {
        background-color: mediumblue;
    }
</style>



<!--Row 2-->
<div class="row">
    <div class="col-8">
        <p class="text-center">Accuracy over time</p>
        <!-- Line Chart-->
        <canvas id="AccuracyLineChart" width="400" height="200"></canvas>

        <script>
            var ctx = document.getElementById('AccuracyLineChart');
            var data_total = [0.8, 0.76, 0.83, 0.89, 0.84, 0.93, 0.96];
            var data_A = [0.7, 0.74, 0.72, 0.71, 0.77, 0.78, 0.81];
            var data_B = [0.87, 0.84, 0.86, 0.91, 0.87, 0.95, 0.98];
            var data_C = [0.76, 0.74, 0.71, 0.78, 0.80, 0.89, 0.91];
            var data_D = [0.86, 0.9, 0.92, 0.97, 0.92, 0.98, 0.99];
            var labelnames = ["2018Dec", "2019Jan", "2019Feb", "2019Mar", "2019Apr", "2019May", "2019Jun"];
            var myLineChart = new Chart(ctx, {
                type: 'line',

                data: {
                    labels:labelnames,
                    datasets: [{
                        label: "TOTAL",
                        data: data_total,
                        backgroundColor: [
                            'rgba(51, 153, 255, 0.2)',
                        ],
                        borderColor: [
                            'rgba(0, 10, 130, .7)',
                        ],
                        borderWidth: 2
                    },
                    {
                        label: "Clinic A",
                        data: data_A,
                        backgroundColor: [
                            'rgba(0, 0, 0, 0)',
                        ],
                        borderColor: [
                            'rgba(200, 99, 132, .7)',
                        ],
                        borderWidth: 2
                    },
                    {
                        label: "Clinic B",
                        data: data_B,
                        backgroundColor: [
                            'rgba(0, 0, 0, 0)',
                        ],
                        borderColor: [
                            'rgba(86, 0, 198, 0.6)',
                        ],
                        borderWidth: 2
                    },
                    {
                        label: "Clinic C",
                        data: data_C,
                        backgroundColor: [
                            'rgba(0, 0, 0, 0)',
                        ],
                        borderColor: [
                            'rgba(255, 216, 41, .7)',
                        ],
                        borderWidth: 2
                    },
                    {
                        label: "Clinic D",
                        data: data_D,
                        backgroundColor: [
                            'rgba(0, 0, 0, 0)',
                        ],
                        borderColor: [
                            'rgba(99, 216, 41, .7)',
                        ],
                        borderWidth: 2
                    }
                    ]
                },

            });




            //var AccuracyLineChart = new Chart(ctx, config);
            //var myPieChart = new Chart(pctx, pconfig);


            function clickMonthly() {
                //$('#title1').html('Number of Uploaded Photos Over Time');
                $('#usageLineChart').show();
                //$('#usageMap').hide();
                var data_total = [0.8, 0.76, 0.83, 0.89, 0.84, 0.93, 0.96];
                var data_A = [0.7, 0.74, 0.72, 0.71, 0.77, 0.78, 0.81];
                var data_B = [0.87, 0.84, 0.86, 0.91, 0.87, 0.95, 0.98];
                var data_C = [0.76, 0.74, 0.71, 0.78, 0.80, 0.89, 0.91];
                var data_D = [0.86, 0.9, 0.92, 0.97, 0.92, 0.98, 0.99];
                var labelnames = ["2018Dec", "2019Jan", "2019Feb", "2019Mar", "2019Apr", "2019May", "2019Jun"];

                myLineChart.data.datasets[0].data = data_total;
                myLineChart.data.datasets[1].data = data_A;
                myLineChart.data.datasets[2].data = data_B;
                myLineChart.data.datasets[3].data = data_C;
                myLineChart.data.datasets[4].data = data_D;
                myLineChart.data.labels = labelnames;
                // myLineChart.data.labels = chart_labels;
                myLineChart.update();

                //var newpdata = [10, 10, 10, 10];
                // myPieChart.data.labels = pie_labels;
                //myPieChart.data.datasets[0].data = newpdata;
                // myPieChart.update();
                var data_clinic = [0.95, 0.90, 0.86, 0.81];
                myBarChart1.data.datasets[0].data = data_clinic;
                myBarChart1.update();
            }

            function clickYearly() {
                //$('#title1').html('Number of Uploaded Photos Over Time');
                $('#usageLineChart').show();
                //$('#usageMap').hide();
                var data_total = [0.8, 0.76, 0.83, 0.89];
                var data_A = [0.7, 0.74, 0.72, 0.71];
                var data_B = [0.87, 0.84, 0.86, 0.91];
                var data_C = [0.76, 0.74, 0.71, 0.78];
                var data_D = [0.86, 0.9, 0.92, 0.97];
                var labelnames = ["2016", "2017", "2018", "2019"];

                myLineChart.data.datasets[0].data = data_total;
                myLineChart.data.datasets[1].data = data_A;
                myLineChart.data.datasets[2].data = data_B;
                myLineChart.data.datasets[3].data = data_C;
                myLineChart.data.datasets[4].data = data_D;
                myLineChart.data.labels = labelnames;
                // myLineChart.data.labels = chart_labels;
                myLineChart.update();

                //var newpdata = [10, 10, 10, 10];
                // myPieChart.data.labels = pie_labels;
                //myPieChart.data.datasets[0].data = newpdata;
                // myPieChart.update();
                var data_clinic = [0.96, 0.89, 0.88, 0.85];
                myBarChart1.data.datasets[0].data = data_clinic;
                myBarChart1.update();
                
            }

            function clickApply() {
                //$('#title1').html('Number of Uploaded Photos Over Time');
                $('#usageLineChart').show();
                //$('#usageMap').hide();
                var data_total = [0.85, 0.81, 0.89, 0.95, 0.93, 0.96, 0.98, 0.98];
                var data_A = [0.73, 0.77, 0.73, 0.72, 0.80, 0.82, 0.86, 0.86];
                var data_B = [0.91, 0.88, 0.92, 0.96, 0.95, 0.98, 0.99, 0.99];
                var data_C = [0.78, 0.76, 0.77, 0.83, 0.83, 0.93, 0.95, 0.95];
                var data_D = [0.92, 0.94, 0.95, 0.98, 0.95, 0.99, 1, 1];
                var labelnames = ["Jun-10", "Jun-11", "Jun-12", "Jun-13", "Jun-14", "Jun-15", "Jun-16", "Jun-17"];

                myLineChart.data.datasets[0].data = data_total;
                myLineChart.data.datasets[1].data = data_A;
                myLineChart.data.datasets[2].data = data_B;
                myLineChart.data.datasets[3].data = data_C;
                myLineChart.data.datasets[4].data = data_D;
                myLineChart.data.labels = labelnames;
                // myLineChart.data.labels = chart_labels;
                myLineChart.update();

                //var newpdata = [10, 10, 10, 10];
                // myPieChart.data.labels = pie_labels;
                //myPieChart.data.datasets[0].data = newpdata;
                // myPieChart.update();
                var data_clinic = [0.98, 0.95, 0.91, 0.89];
                myBarChart1.data.datasets[0].data = data_clinic;
                myBarChart1.update();
            }

            //$('#Apply').click(clickApply);

            $('#DateRangeSelector').daterangepicker({}, clickApply);
            $('#Monthly').click(clickMonthly);
            $('#Yearly').click(clickYearly);



        </script>
    </div>



    <div class="col-4">
        <p class="text-center">Allover Accuracy</p>
        <br />

        <div align="center">
            <span class="min-chart text-center" id="minChart" data-percent="92"></span>
            <span>92%</span>
        </div>

        <!--<link rel="stylesheet" href="~/Scripts/style.css" />-->

        <script>
            var element = document.querySelector('.min-chart');
            new EasyPieChart(element, {
                size: 220,
                barColor: function (percent) {
                    var ctx = this.renderer.getCtx();
                    var canvas = this.renderer.getCanvas();
                    var gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);
                    gradient.addColorStop(0, "#ffe57e");
                    gradient.addColorStop(1, "#de5900");
                    return gradient;
                },
                onStep: function (from, to, percent) {
                    this.el.children[0].innerHTML = Math.round(percent);
                }
            });

        </script>


    </div>











</div>
<br />

<!--Row 3-->
<div class="row">
    <div class="col-6" align="left">
        <p class="text-center">Clinic comparison</p>
        <!--bar Chart-->
        <div>
            <canvas id="mybarChart"></canvas>
        </div>
        <script>
            var ctx = document.getElementById("mybarChart").getContext('2d');

            var data = [0.95, 0.90, 0.86, 0.81];
            var labels = ["Clinic D", "Clinic B", "Clinic C", "Clinic A"];
            ctx.canvas.width = 500;
            ctx.canvas.height = 450;
            var myBarChart1 = new Chart(ctx, {
                type: 'horizontalBar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: "Accuracy",
                        data: data,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)'
                        ],
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: false, // Instruct chart js to respond nicely.
                    maintainAspectRatio: false, // Add to prevent default behaviour of full-width/height
                }
            });



        </script>
    </div>


    <div class="col-6" align="right">

        <p class="text-center">App Version comparison</p>
        <canvas id="VersionBarChart"></canvas>
    </div>
    <script>
        var ctx = document.getElementById("VersionBarChart").getContext('2d');
        var data = [0.98, 0.93, 0.89, 0.87, 0.81];
        var labels = ["3.3", "3.0", "2.3", "2.0", "1.0"];
        ctx.canvas.width = 500;
        ctx.canvas.height = 450;
        var myBarChart2 = new Chart(ctx, {
            type: 'horizontalBar',
            data: {
                labels: labels,
                datasets: [{
                    label: "Accuracy",
                    data: data,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: false, // Instruct chart js to respond nicely.
                maintainAspectRatio: false, // Add to prevent default behaviour of full-width/height
            }
        });
    </script>

</div>
<!--Row 4-->
<div class="row">

</div>
